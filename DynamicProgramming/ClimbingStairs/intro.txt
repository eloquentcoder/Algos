You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?


Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

HINT: This is a typical dynamic programming problem that you can solve using a dp array to calculate the distinct number of ways to reach each step starting from 
the n all the way to the 0th index. This will have a time complexity of 0(n) and a space complexity of (n) as the dp array grows as n grows. 
There is a way to solve this in 0(1) space complexity