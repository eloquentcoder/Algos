The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

DIFFICULTY: Easy

F(0) = 0, F(1) = 1
F(n) = F(n - 1) + F(n - 2), for n > 1.


Link to problem
https://leetcode.com/problems/fibonacci-number/

HINT: There are two ways to solve a dynamic programming problem, either by using memoization or tabulation. Memoization involving storing already smaller version of the problem in a memo object and using it to get the value of the input.

TIME_COMPLEXITY: 0(n) where n is the number of the given input
SPACE_COMPLEXITY:  0(n) where n is the number of given input


RESOURCE FOR LEARNING
https://www.youtube.com/watch?v=kIzjdvU_QIU