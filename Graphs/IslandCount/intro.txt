Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.

An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

Example 1:

Input: grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
Output: 1
Example 2:

Input: grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]

Output: 3
 

Link to problem
https://leetcode.com/problems/number-of-islands/

HINT: We need to go through the grid and immediately we get a land, we recursively traverse its unvisited neighors to know if it is a island(not an 0) and 
increase the island count

TIME_COMPLEXITY: 0(m*n) where m is the rows and n is the number of columns
SPACE_COMPLEXITY:  0(m*n) where m is the rows and n is the number of columns

